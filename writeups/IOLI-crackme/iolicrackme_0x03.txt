    ==sexyplatypussies.com==

     -------------------
---[     Crackme 0x03    ]---
     -------------------

Once again...

./crackme0x03
IOLI Crackme Level 0x03
Password: asd
Invalid Password!

But, this time there are some weird strings:

Lqydolg#Sdvvzrug$
Sdvvzrug#RN$$$#=,
IOLI Crackme Level 0x03
Password: 

This time we can't even see 'Password OK :)' or 'Invalid Password!'

Let's disassemble:

$ radare2 crackme0x03
 -- rm: /: Permission denied.
[0x08048360]> aa
[0x08048360]> pdf@main
/ (fcn) sym.main 128
|          ; arg int arg_22_2     @ ebp+0x5a
|          ; arg int arg_123      @ ebp+0x1ec
|          ; var int local_0_1    @ ebp-0x1
|          ; var int local_1      @ ebp-0x4
|          ; var int local_2      @ ebp-0x8
|          ; var int local_3      @ ebp-0xc
|          ; DATA XREF from 0x08048377 (entry0)
|          ;-- main:
|          0x08048498    55             push ebp
|          0x08048499    89e5           mov ebp, esp
|          0x0804849b    83ec18         sub esp, 0x18
|          0x0804849e    83e4f0         and esp, 0xfffffff0
|          0x080484a1    b800000000     mov eax, 0
|          0x080484a6    83c00f         add eax, 0xf
|          0x080484a9    83c00f         add eax, 0xf
|          0x080484ac    c1e804         shr eax, 4
|          0x080484af    c1e004         shl eax, 4
|          0x080484b2    29c4           sub esp, eax
|          0x080484b4    c70424108604.  mov dword [esp], str.IOLI_Crackme_Level_0x03_n ; [0x8048610:4]=0x494c4f49  LEA str.IOLI_Crackme_Level_0x03_n ; "IOLI Crackme Level 0x03." @ 0x8048610
|          0x080484bb    e890feffff     call sym.imp.printf            ;sym.imp.printf()
|          0x080484c0    c70424298604.  mov dword [esp], str.Password: ; [0x8048629:4]=0x73736150  LEA str.Password: ; "Password: " @ 0x8048629
|          0x080484c7    e884feffff     call sym.imp.printf            ;sym.imp.printf()
|          0x080484cc    8d45fc         lea eax, [ebp-local_1]
|          0x080484cf    89442404       mov dword [esp + 4], eax
|          0x080484d3    c70424348604.  mov dword [esp], 0x8048634     ; [0x8048634:4]=0x6425  ; "%d" @ 0x8048634
|          0x080484da    e851feffff     call sym.imp.scanf             ;sym.imp.scanf()
|          0x080484df    c745f85a0000.  mov dword [ebp-local_2], 0x5a  ; [0x5a:4]=0x81540000  ; 'Z'
|          0x080484e6    c745f4ec0100.  mov dword [ebp-local_3], 0x1ec ; [0x1ec:4]=0
|          0x080484ed    8b55f4         mov edx, dword [ebp-local_3]
|          0x080484f0    8d45f8         lea eax, [ebp-local_2]
|          0x080484f3    0110           add dword [eax], edx
|          0x080484f5    8b45f8         mov eax, dword [ebp-local_2]
|          0x080484f8    0faf45f8       imul eax, dword [ebp-local_2]
|          0x080484fc    8945f4         mov dword [ebp-local_3], eax
|          0x080484ff    8b45f4         mov eax, dword [ebp-local_3]
|          0x08048502    89442404       mov dword [esp + 4], eax
|          0x08048506    8b45fc         mov eax, dword [ebp-local_1]
|          0x08048509    890424         mov dword [esp], eax
|          0x0804850c    e85dffffff     call sym.test                  ;sym.test()
|          0x08048511    b800000000     mov eax, 0
|          0x08048516    c9             leave
\          0x08048517    c3             ret

Crackme 0x02 and this are basically the same, but this time it calls sym.test after check our input with ebp-local_3:

[0x08048360]> pdf@sym.test()
/ (fcn) sym.test 42
|          ; arg int arg_2        @ ebp+0x8
|          ; arg int arg_3        @ ebp+0xc
|          ; CALL XREF from 0x0804850c (sym.main)
|          0x0804846e    55             push ebp
|          0x0804846f    89e5           mov ebp, esp
|          0x08048471    83ec08         sub esp, 8
|          0x08048474    8b4508         mov eax, dword [ebp+arg_2]     ; [0x8:4]=0
|          0x08048477    3b450c         cmp eax, dword [ebp+arg_3]     ; [0xc:4]=0
|      ,=< 0x0804847a    740e           je 0x804848a                  
|      |   0x0804847c    c70424ec8504.  mov dword [esp], str.Lqydolg_Sdvvzrug_ ; [0x80485ec:4]=0x6479714c  LEA str.Lqydolg_Sdvvzrug_ ; "Lqydolg#Sdvvzrug$" @ 0x80485ec
|      |   0x08048483    e88cffffff     call sym.shift                 ;sym.shift()
|     ,==< 0x08048488    eb0c           jmp 0x8048496                 
|     ||   ; JMP XREF from 0x0804847a (sym.test)
|     |`-> 0x0804848a    c70424fe8504.  mov dword [esp], str.Sdvvzrug_RN______ ; [0x80485fe:4]=0x76766453  LEA str.Sdvvzrug_RN______ ; "Sdvvzrug#RN$$$#=," @ 0x80485fe
|     |    0x08048491    e87effffff     call sym.shift                 ;sym.shift()
|     |    ; JMP XREF from 0x08048488 (sym.test)
|     `--> 0x08048496    c9             leave
\          0x08048497    c3             ret

This function gets 2 args: our input and ebp-local_3. If boths args are equals it calls sym.shift with one of those
weird strings for "Password OK!!! :)" and if they are not equals it calls sym.shift with the other weird string "Invalid Passoword!"

Lqydolg#Sdvvzrug$
Sdvvzrug#RN$$$#=,

Let's check with crackme 0x02 password:

$ ./crackme0x03
IOLI Crackme Level 0x03
Password: 338724
Password OK!!! :)
